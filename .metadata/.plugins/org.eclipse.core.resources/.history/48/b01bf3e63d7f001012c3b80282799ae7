package com.securenetbank.service;

import com.securenetbank.model.Account;
import com.securenetbank.model.Transaction;
import org.springframework.stereotype.Service;

import java.time.LocalDateTime;
import java.util.*;

@Service
public class AccountService {

    private Map<String, Account> accounts = new HashMap<>();
    private List<Transaction> transactions = new ArrayList<>();

    public AccountService() {
        // Sample accounts
        accounts.put("123456789012", new Account("123456789012", "Atharv", 10000));
        accounts.put("987654321098", new Account("987654321098", "Riya", 5000));
    }

    public Account getAccount(String accNo) {
        return accounts.get(accNo);
    }

    public Map<String, Account> getAllAccounts() {
        return accounts;
    }

    public List<Transaction> getTransactionsForUser(String holderName) {
        List<Transaction> userTxns = new ArrayList<>();
        for (Transaction txn : transactions) {
            if (txn.getFromName().equals(holderName) || txn.getToName().equals(holderName)) {
                userTxns.add(txn);
            }
        }
        return userTxns;
    }

    public boolean transfer(String fromAcc, String toAcc, double amount) {
        Account from = accounts.get(fromAcc);
        Account to = accounts.get(toAcc);
        if (from != null && to != null && from.getBalance() >= amount) {
            from.setBalance(from.getBalance() - amount);
            to.setBalance(to.getBalance() + amount);

            transactions.add(new Transaction(fromAcc, from.getHolderName(), toAcc, to.getHolderName(), amount, LocalDateTime.now()));
            return true;
        }
        return false;
    }
}
